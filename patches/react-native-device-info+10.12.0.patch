diff --git a/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfo.m b/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfo.m
index 4b4b4dd..4d570ae 100644
--- a/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfo.m
+++ b/node_modules/react-native-device-info/ios/RNDeviceInfo/RNDeviceInfo.m
@@ -509,44 +509,6 @@ - (double) getTotalMemory {
     resolve(@(self.getTotalMemory));
 }

-- (double) getTotalDiskCapacity {
-    uint64_t totalSpace = 0;
-    NSDictionary *storage = [self getStorageDictionary];
-
-    if (storage) {
-        NSNumber *fileSystemSizeInBytes = [storage objectForKey: NSFileSystemSize];
-        totalSpace = [fileSystemSizeInBytes unsignedLongLongValue];
-    }
-    return (double) totalSpace;
-}
-
-RCT_EXPORT_BLOCKING_SYNCHRONOUS_METHOD(getTotalDiskCapacitySync) {
-    return @(self.getTotalDiskCapacity);
-}
-
-RCT_EXPORT_METHOD(getTotalDiskCapacity:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
-    resolve(@(self.getTotalDiskCapacity));
-}
-
-- (double) getFreeDiskStorage {
-    uint64_t freeSpace = 0;
-    NSDictionary *storage = [self getStorageDictionary];
-
-    if (storage) {
-        NSNumber *freeFileSystemSizeInBytes = [storage objectForKey: NSFileSystemFreeSize];
-        freeSpace = [freeFileSystemSizeInBytes unsignedLongLongValue];
-    }
-    return (double) freeSpace;
-}
-
-RCT_EXPORT_BLOCKING_SYNCHRONOUS_METHOD(getFreeDiskStorageSync) {
-    return @(self.getFreeDiskStorage);
-}
-
-RCT_EXPORT_METHOD(getFreeDiskStorage:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
-    resolve(@(self.getFreeDiskStorage));
-}
-
 - (NSString *) getDeviceTypeName {
     return [DeviceTypeValues objectAtIndex: [self getDeviceType]];
 }
diff --git a/node_modules/react-native-device-info/lib/typescript/index.d.ts b/node_modules/react-native-device-info/lib/typescript/index.d.ts
index ee8d78e..cf0b765 100644
--- a/node_modules/react-native-device-info/lib/typescript/index.d.ts
+++ b/node_modules/react-native-device-info/lib/typescript/index.d.ts
@@ -59,12 +59,6 @@ export declare const getPhoneNumber: import("./internal/privateTypes").Getter<Pr
 export declare const getCarrier: import("./internal/privateTypes").Getter<Promise<string>>, getCarrierSync: import("./internal/privateTypes").Getter<string>;
 export declare const getTotalMemory: import("./internal/privateTypes").Getter<Promise<number>>, getTotalMemorySync: import("./internal/privateTypes").Getter<number>;
 export declare const getMaxMemory: import("./internal/privateTypes").Getter<Promise<number>>, getMaxMemorySync: import("./internal/privateTypes").Getter<number>;
-export declare const getTotalDiskCapacity: import("./internal/privateTypes").Getter<Promise<number>>, getTotalDiskCapacitySync: import("./internal/privateTypes").Getter<number>;
-export declare function getTotalDiskCapacityOld(): Promise<number>;
-export declare function getTotalDiskCapacityOldSync(): number;
-export declare const getFreeDiskStorage: import("./internal/privateTypes").Getter<Promise<number>>, getFreeDiskStorageSync: import("./internal/privateTypes").Getter<number>;
-export declare function getFreeDiskStorageOld(): Promise<number>;
-export declare function getFreeDiskStorageOldSync(): number;
 export declare const getBatteryLevel: import("./internal/privateTypes").Getter<Promise<number>>, getBatteryLevelSync: import("./internal/privateTypes").Getter<number>;
 export declare const getPowerState: import("./internal/privateTypes").Getter<Promise<Partial<PowerState>>>, getPowerStateSync: import("./internal/privateTypes").Getter<Partial<PowerState>>;
 export declare const isBatteryCharging: import("./internal/privateTypes").Getter<Promise<boolean>>, isBatteryChargingSync: import("./internal/privateTypes").Getter<boolean>;
